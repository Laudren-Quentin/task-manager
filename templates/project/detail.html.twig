{# templates/project/detail.html.twig #}
{% extends 'base.html.twig' %}
{% block body %}

	<h2 class="text-center bg-secondary p-4 text-light">{{ project.title }}</h2>
	<div class="container d-flex justify-content-between">
		<div class="order-2">
			<div class="users_member">
				{% include 'includes/members.html.twig' %}
			</div>
			<div>
				{% include 'includes/options.html.twig' %}
			</div>
			<div>
				{% include 'includes/legend.html.twig' %}
			</div>
		</div>
		<div class="col-8">
			<div class="d-flex justify-content-between align-items-center">
				<h3 class="mb-4 mt-4">Tâches :</h3>
				{% if project.creator == app.user %}
					<a href="{{ path('app_create_task', {'id': project.id}) }}" title="Ajouter une tâche" class="btn btn-primary m-4">
						<i class="fa-solid fa-plus"></i>
					</a>
				{% endif %}
			</div>
			<div class="task-cards">
				{% for task in project.tasks %}
					{% include 'includes/task_card.html.twig' %}
				{% endfor %}
			</div>
		</div>
	</div>
{% endblock %}

{% block javascripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const deleteTaskButtons = document.querySelectorAll('.delete-task-button');
        // Supréssion d'une tâche
        deleteTaskButtons.forEach(button => {
            button.addEventListener('click', function() {
                const taskId = button.getAttribute('data-task-id');
                const deleteUrl = `/task/delete/${taskId}`;
                const crsfTokenDeleteTask = button.getAttribute('data-csrf-token-delete-task');

                // Utilisez la fonction confirm pour demander une confirmation à l'utilisateur
                if (confirm('Êtes-vous sûr de vouloir supprimer cette tâche ?')) {
                    fetch(deleteUrl, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRF-TOKEN': crsfTokenDeleteTask,
                        },
                    })
                    .then(response => {
                        if (response.status === 200) {
                            // La tâche a été supprimée avec succès, vous pouvez afficher une alerte de succès
                            alert('Tâche supprimée avec succès');
                            // Vous pouvez également recharger la page pour refléter les modifications
                            location.reload();
                        } else {
                            // En cas d'erreur, affichez une alerte d'erreur avec le message de réponse
                            response.text().then(message => {
                                alert('Erreur lors de la suppression de la tâche : ' + message);
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Erreur lors de la suppression de la tâche :', error);
                        alert('Une erreur s\'est produite lors de la suppression de la tâche.');
                    });
                }
            });
        });

        const validateTaskButtons = document.querySelectorAll('.validate-task-button');

        //Validation d'une tâche
        validateTaskButtons.forEach(button => {
            button.addEventListener('click', function() {
                let taskId = button.getAttribute('data-task-id');
                let crsfValidateTask = button.getAttribute('data-csrf-token-validate-task');
                if (confirm('Voulez-vous valider la tâche en cours ?')) {
                    fetch(`/task/validate/${taskId}`, {
                         headers: {
                            'Content-Type': 'application/json',
                            'X-CSRF-TOKEN': crsfValidateTask,
                        },
                    })
                    .then(response => response.json())
                    .then(result => {
                        if (result.success) {
                            location.reload();
                        } else {
                            alert(result.message);
                        }
                    });
                }
            });
        });

        const addUserForm = document.getElementById('addUserForm');
        const emailInput = document.getElementById('email');
        const addUserButton = document.getElementById('addUserButton');
        const projectId = {{ project.id }}; // Remplacez ceci par le moyen d'obtenir l'ID du projet

        // Ajout d'un utlisateur
        addUserButton.addEventListener('click', function() {
            var regex = /[^\s@]+@[^\s@]+\.[^\s@]+/; // regex de mail
            const email = emailInput.value;
            if(email !== "" && regex.test(email)){
                fetch(`/add-user-to-project/${projectId}?email=${email}`, {
                    method: 'POST',
                })
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        // L'utilisateur a été ajouté avec succès, vous pouvez mettre à jour la liste des membres de l'équipe
                        alert('Utilisateur ajouté avec succès au groupe.');
                        // Rechargez ou mettez à jour la liste des membres de l'équipe ici
                        location.reload();
                    } else {
                        alert(result.message);
                    }
                });
            } else {
                alert('Il faut rentrer une adresse e-mail valide');
            }
        });

        const removeUserButtons = document.querySelectorAll('.remove-user-button');

        // Supression d'un utilisateur
        removeUserButtons.forEach(button => {
            button.addEventListener('click', function() {
                const userEmail = button.getAttribute('data-user-email');
                const projectId = {{ project.id }};
                if (confirm('Êtes-vous sûr de vouloir enlever cet utilisateur du groupe ?')) {
                    fetch(`/remove-user-from-project/${projectId}?email=${userEmail}`)
                    .then(response => response.json())
                    .then(result => {
                        if (result.success) {
                            // L'utilisateur a été supprimé avec succès, vous pouvez mettre à jour la liste des membres de l'équipe
                            alert('L\'utilisateur supprimé avec succès du groupe.');
                            // Rechargez ou mettez à jour la liste des membres de l'équipe ici
                            location.reload();
                        } else {
                            alert(result.message);
                        }
                    });
                }
            });
        });
    });
</script>

{% endblock %}
