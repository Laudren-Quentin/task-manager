{# templates/project/detail.html.twig #}
{% extends 'base.html.twig' %}
{% block body %}

	<h2>{{ project.title }}</h2>
	<div class="container d-flex justify-content-between">
		<div class="order-2">
			<h3 class="m-4">Membres de l'équipe</h3>
			<ul class="list-group">
				{% for user in project.team %}
					<li class="list-group-item d-flex justify-content-between">
						<div>
							<i class="fas fa-user"></i>
							{{ user.email }}
						</div>
						{% if project.creator == app.user %}
							{# TODO: SI CRéATEUR IL PEUT Supprimer DES MEMBRES #}
							<a href="" class="btn btn-danger btn-sm" title="Supprimer la tâche">
								<i class="fas fa-trash"></i>
							</a>
						{% endif %}
					</li>
				{% endfor %}
				{% if project.creator == app.user %}
					<li class="list-group-item">
						<form id="addUserForm">
							<div class="form-group">
								<input type="text" class="form-control" id="email" name="email" placeholder="e-mail de l'utilisateur">
							</div>
							<button type="button" class="btn btn-primary" id="addUserButton">Ajouter l'utilisateur</button>
						</form>
					</li>
				{% endif %}
			</ul>
		</div>
		<div class="col-8">
			<div class="d-flex justify-content-between align-items-center">
				<h3>Tâches :</h3>
				{% if project.creator == app.user %}
					<a href="{{ path('app_create_task', {'id': project.id}) }}" title="Ajouter une tâche" class="btn btn-primary m-4">
						<i class="fa-solid fa-plus"></i>
					</a>
				{% endif %}
			</div>
			<div class="task-cards">
				{% for task in project.tasks %}
					<div class="card mb-3">
						<div class="card-header d-flex justify-content-between align-items-center {{ task.category.label == 'Urgent' ? 'bg-danger' : (task.category.label == 'Modéré' ? 'bg-warning' : 'bg-primary') }}">

							<h4 class="mb-0 text-light">{{ task.title }}</h4>
							{% if task.creator == app.user %}
								<div class="btn-group" role="group">
									<a href="" class="btn btn-warning btn-sm border-2 border-light" title="Modifier la tâche">
										<i class="fas fa-edit"></i>
									</a>
									<button type="button" class="btn btn-danger delete-task-button border-2 border-light" data-task-id="{{ task.id }}">
										<i class="fas fa-trash"></i>
									</button>
								</div>
							{% endif %}
						</div>

						<div class="card-body">
							<p>{{ task.description }}</p>
							<p>
								Status :
								{% if task.completed %}
									<i class="fas fa-check-circle text-success"></i>
									Terminé
								{% else %}
									{% if task.assignedUser ==  app.user %}
										<button class="btn btn-success">
											Valider la tâche
										</button>
									{% else %}
										<i class="fas fa-spinner fa-spin text-warning"></i>
										En attente
									{% endif %}
								{% endif %}
							</p>
						</p>
						<p>
							{% if task.assignedUser %}
								<i class="fas fa-user text-primary"></i>
								Assigné à :
								{{ task.assignedUser.email }}
							{% else %}
								<i class="fas fa-user-times text-danger"></i>
								Non assigné
							{% endif %}
						</p>
					</div>

					<div class="card-footer d-flex justify-content-between">
						<p class="mb-0">Créé le :
							{{ task.createdAt|date('d-m-Y') }}</p>
						{% if task.createdAt != task.updatedAt %}
							<p class="mb-0">Modifié le :
								{{ task.updatedAt|date('d-m-Y') }}</p>
						{% endif %}
					</div>
				</div>
			{% endfor %}
		</div>
	</div>
</div>


 <script>
 // Supression d'une task :
			document.addEventListener('DOMContentLoaded', function() {
		    const deleteButtons = document.querySelectorAll('.delete-task-button');
		
		    deleteButtons.forEach(button => {
		        button.addEventListener('click', function() {
		            const taskId = button.getAttribute('data-task-id');
		            const deleteUrl = `/task/delete/${taskId}`;
		
		            // Utilisez la fonction confirm pour demander une confirmation à l'utilisateur
		            if (confirm('Êtes-vous sûr de vouloir supprimer cette tâche ?')) {
		                fetch(deleteUrl, {
		                    method: 'DELETE',
		                    headers: {
		                        'Content-Type': 'application/json',
		                    },
		                })
		                .then(response => {
		                    if (response.status === 200) {
		                        // La tâche a été supprimée avec succès, vous pouvez afficher une alerte de succès
		                        alert('Tâche supprimée avec succès');
		                        // Vous pouvez également recharger la page pour refléter les modifications
		                        location.reload();
		                    } else {
		                        // En cas d'erreur, affichez une alerte d'erreur avec le message de réponse
		                        response.text().then(message => {
		                            alert('Erreur lors de la suppression de la tâche : ' + message);
		                        });
		                    }
		                })
		                .catch(error => {
		                    console.error('Erreur lors de la suppression de la tâche :', error);
		                    alert('Une erreur s\'est produite lors de la suppression de la tâche.');
		                });
		            }
		        });
		    });
		});
        // -----------------------------------------------------------------------------------------------------------

        // Ajout d'un utilisateur
         document.addEventListener('DOMContentLoaded', function() {
        const addUserForm = document.getElementById('addUserForm');
        const emailInput = document.getElementById('email');
        const addUserButton = document.getElementById('addUserButton');
        const projectId = {{ project.id }}; // Remplacez ceci par le moyen d'obtenir l'ID du projet

        addUserButton.addEventListener('click', function() {
            var regex = /[^\s@]+@[^\s@]+\.[^\s@]+/;
            const email = emailInput.value;
            if(email !== "" && regex.test(email)){
            // Effectuer une requête AJAX pour vérifier si l'utilisateur existe
                    // L'utilisateur existe, vous pouvez maintenant l'ajouter au groupe
                    fetch(`/add-user-to-project/${projectId}?email=${email}`, {
                        method: 'POST',
                    })
                    .then(response => response.json())
                    .then(result => {
                        if (result.success) {
                            // L'utilisateur a été ajouté avec succès, vous pouvez mettre à jour la liste des membres de l'équipe
                            alert('Utilisateur ajouté avec succès au groupe.');
                            // Rechargez ou mettez à jour la liste des membres de l'équipe ici
                            location.reload();
                        } else {
                           alert(result.message);
                        }
                    });
            }else{
                alert('Il faut rentrer une addresse mail');
            }
        });
    });
	</script>{% endblock %}
